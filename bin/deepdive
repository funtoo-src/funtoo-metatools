#!/usr/bin/python3
import asyncio
import logging

import pop.hub
from dict_tools.data import NamespaceDict

from merge_utils.config import Configuration
from merge_utils.tree import GitTree

hub_logger = logging.getLogger("pop.hub")
hub_logger.setLevel(logging.DEBUG)
hub = pop.hub.Hub()


async def insert_kit(ctx):
	ctx, items_to_insert = await hub.merge.kit.get_deepdive_kit_items(ctx)
	result = hub.DEEPDIVE.insert_many(items_to_insert)
	print(f"kit {ctx.kit.name} - inserted {len(result.inserted_ids)} items.")
	if len(items_to_insert) != len(result.inserted_ids):
		raise KeyError("Number of inserted items does not match!")


async def foo(ctx):
	print(ctx.kit.name)


if __name__ == "__main__":
	hub.MERGE_CONFIG = config = Configuration()
	hub.RELEASE = "1.4-release"
	hub.GIT_CLASS = GitTree
	hub.FIXUP_REPO = GitTree(
		hub,
		"kit-fixups",
		config.branch("kit-fixups"),
		url=config.kit_fixups,
		root=config.source_trees + "/kit-fixups",
	)
	hub.META_REPO = meta_repo = GitTree(
		hub, "meta-repo", branch=hub.RELEASE, url=config.meta_repo, root=config.dest_trees + "/meta-repo", origin_check=False
	)
	hub.pop.sub.add("funtoo.merge")
	hub.pop.sub.add("funtoo.pkgtools")
	hub.pop.sub.add("funtoo.cache")

	hub.META_REPO.initialize()
	hub.FIXUP_REPO.initialize()
	hub.KIT_GROUPS = list(hub.merge.foundations.kit_groups())
	pipeline_keys, pipeline_groups = hub.merge.sources.get_kits_in_correct_processing_order()

	hub.DEEPDIVE.delete_many({})

	for source in pipeline_keys:
		kit_dict_list = pipeline_groups[source]
		for kit_dict in kit_dict_list:
			ctx = NamespaceDict({"kit": NamespaceDict(kit_dict)})
			asyncio.get_event_loop().run_until_complete(insert_kit(ctx))
