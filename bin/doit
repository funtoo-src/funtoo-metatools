#!/usr/bin/env python3

import asyncio
import sys
import traceback

import pop.hub
import logging

from merge_utils.config import Configuration

hub_logger = logging.getLogger("pop.hub")
hub_logger.setLevel(logging.DEBUG)
hub = pop.hub.Hub()

int_g = ["doit"]

hub.pop.conf.integrate(int_g, cli="doit", roots=True, loader="yaml", logs=True)

if __name__ == "__main__":

	kwargs = {}
	for arg in ["fetcher", "out_path", "start_path", "release", "kit", "branch"]:
		kwargs[arg] = hub.OPT["doit"][arg]
	hub.MERGE_CONFIG = config = Configuration(fastpull=hub.OPT["doit"]["fastpull"])

	hub.pop.sub.add("funtoo.merge")
	hub.pop.sub.add("funtoo.pkgtools", omit_class=False)

	errors = asyncio.get_event_loop().run_until_complete(hub.pkgtools.autogen.start(**kwargs))

	if len(errors):
		sys.stderr.write("\n\n")
		for e, exc_info in errors:
			msg = getattr(e, "msg", None)
			if msg is not None:
				logging.error(f"Message: {msg}")
			traceback.print_exception(*exc_info)
		sys.stderr.write("\n\nErrors encountered.\n")
		sys.exit(1)
# TODO: add after-action report (listing any failures.)
# TODO: add mass-autogen YAML support.
# TODO: add 'facts' database concept to allow more resiliency on failures (fall back to cached facts from last
#       successful run)

# vim: ts=4 sw=4 noet
